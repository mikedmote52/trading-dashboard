# Render deployment configuration - Complete Web/Worker Separation
# Copy this configuration to Render dashboard or use for reference

services:
  - type: web
    name: trading-dashboard-web
    env: node
    region: oregon
    plan: starter
    buildCommand: npm ci --omit=dev
    startCommand: NODE_ENV=production USE_POSTGRES=true node server.js
    envVars:
      - key: DIRECT_WORKER_ENABLED
        value: "false"
      - key: USE_POSTGRES
        value: "true"
      - key: DISABLE_V2
        value: "true"
      - key: DISABLE_ALPHASTACK_BG
        value: "true"
      - key: DATABASE_URL
        sync: false

  - type: worker
    name: portfolio-manager-worker
    runtime: docker
    dockerfilePath: Dockerfile.worker
    envVars:
      - key: DIRECT_WORKER_ENABLED
        value: "true"
      - key: USE_POSTGRES
        value: "true"
      - key: DISABLE_V2
        value: "false"
      - key: DISABLE_ALPHASTACK_BG
        value: "false"
      - key: DATABASE_URL
        sync: false
      - key: APCA_API_KEY_ID
        sync: false
      - key: APCA_API_SECRET_KEY
        sync: false
      - key: POLYGON_API_KEY
        sync: false

# Environment variables to set in Render dashboard:
# 
# Required for both services:
# - DATABASE_URL: Postgres connection string (auto-provided by Render)
# - POLYGON_API_KEY: Your Polygon.io API key
# - APCA_API_KEY_ID: Alpaca paper trading API key ID  
# - APCA_API_SECRET_KEY: Alpaca paper trading secret key
#
# Optional:
# - ADMIN_TOKEN: For protected admin endpoints
# - ALPACA_TRADING_BASE: https://paper-api.alpaca.markets (default)
# - ALPACA_DATA_BASE: https://data.alpaca.markets (default)
#
# Architecture:
# - Web service: Pure UI/API, no background processing
# - Worker service: All Python screeners and background tasks
# - Database: Shared Postgres between both services